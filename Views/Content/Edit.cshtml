@model WebEnterprise.Models.Content

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<<<<<<< HEAD





<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/Content/edit.css">
    
</head>
@using (Html.BeginForm("Edit", "Content", FormMethod.Post, new { enctype = "multipart/form-data" }))
{ 
@Html.AntiForgeryToken()
<div class="form-style-3">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CTID)
    <form>
        <fieldset>
            <legend>Edit YourContent</legend>
            <label for="field1">
                <span>
                    CTName<span class="required">*</span>
                </span>
                @Html.EditorFor(model => model.CTName, new { htmlAttributes = new { @class = "form-control" } })
            </label>
            <label for="field2">
                <span>CTDescription<span class="required">*</span></span>
                @Html.TextAreaFor(model => model.CTDescription, new { htmlAttributes = new { @class = "form-control" } })
            </label>
            <label for="field3">
                <span>TopicID<span class="required">*</span></span>
                @Html.DropDownList("TopicID", null, htmlAttributes: new { @class = "form-control" })
            </label>

            <label for="field3">
                <span>FacultyID<span class="required">*</span></span>
                @ViewBag.FacultyID
            </label>
            <label for="field3">
                <span>StudentName <span class="required">*</span></span>

                @ViewBag.StudentName
            </label>
            <label for="field3">
                <span>StudentID<span class="required">*</span></span>
                @ViewBag.StudentID
            </label>
=======
<head>
    <meta charset="utf-8">
    <title>university magazine</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"></script>


</head>

<body>
    <h2>Edit</h2>


    @using (Html.BeginForm("Edit", "Content", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Content</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CTID)

            <div class="form-group">
                @Html.LabelFor(model => model.CTName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CTName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CTName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CTDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.CTDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CTDescription, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FacultyID, "FacultyID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @ViewBag.FacultyID
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TopicID, "TopicID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TopicID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TopicID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Student.StudentName, "StudentName", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @ViewBag.StudentName
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Student.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @ViewBag.StudentID
                </div>
            </div>

>>>>>>> 1b525699e0746746debc2283f771003093029823
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="file" name="postedImg" value="Choose File" /> IMAGE ONLY
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="file" name="postedPDF" value="Choose File" /> PDF ONLY
                </div>
            </div>
<<<<<<< HEAD
        </fieldset>
    </form>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
=======

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
        {
            if (TempData["message"] != null)
            {
                <script type="text/javascript">
        alert(@Html.Raw(Json.Encode(TempData["message"])));
                </script>
            }
        }
    }
>>>>>>> 1b525699e0746746debc2283f771003093029823

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
</body>